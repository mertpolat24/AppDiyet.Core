// <auto-generated />
using System;
using AppDiyet.Repo.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppDiyet.Repo.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241211212356_intialConfig61")]
    partial class intialConfig61
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppDiyet.Core.Concretes.Food", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Calories")
                        .HasColumnType("decimal(7,2)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal>("FoodAmount")
                        .HasColumnType("decimal(7,2)");

                    b.Property<int>("FoodCategoriesId")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PortionType")
                        .HasColumnType("int");

                    b.Property<decimal>("Proteins")
                        .HasColumnType("decimal(7,2)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FoodCategoriesId");

                    b.ToTable("Foods");
                });

            modelBuilder.Entity("AppDiyet.Core.Concretes.FoodCategories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("FoodCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Sebze yemekleri"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Et yemekleri"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Kızartmalar"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Kızartmalar"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Hamur işleri"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Meyveler"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Sebzeler"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Hayvansal gıdalar"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Kuruyemişler"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Tatlılar"
                        },
                        new
                        {
                            Id = 11,
                            Name = "İçecekler"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Atıştırmalıklar"
                        });
                });

            modelBuilder.Entity("AppDiyet.Core.Concretes.FoodMeals", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FoodId")
                        .HasColumnType("int");

                    b.Property<int>("MealId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FoodId");

                    b.HasIndex("MealId");

                    b.ToTable("FoodMeals");
                });

            modelBuilder.Entity("AppDiyet.Core.Concretes.Meals", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MealName")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("AppDiyet.Core.Concretes.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Activities")
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(350)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Lenght")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("MealsCount")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Purpose")
                        .HasColumnType("int");

                    b.Property<decimal>("TargetWeight")
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Password")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AppDiyet.Core.Concretes.Food", b =>
                {
                    b.HasOne("AppDiyet.Core.Concretes.FoodCategories", "FoodCategories")
                        .WithMany("Foods")
                        .HasForeignKey("FoodCategoriesId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("FoodCategories");
                });

            modelBuilder.Entity("AppDiyet.Core.Concretes.FoodMeals", b =>
                {
                    b.HasOne("AppDiyet.Core.Concretes.Food", "Food")
                        .WithMany("FoodMeals")
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppDiyet.Core.Concretes.Meals", "Meals")
                        .WithMany("FoodMeals")
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Food");

                    b.Navigation("Meals");
                });

            modelBuilder.Entity("AppDiyet.Core.Concretes.Meals", b =>
                {
                    b.HasOne("AppDiyet.Core.Concretes.Users", "Users")
                        .WithMany("Meals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("AppDiyet.Core.Concretes.Food", b =>
                {
                    b.Navigation("FoodMeals");
                });

            modelBuilder.Entity("AppDiyet.Core.Concretes.FoodCategories", b =>
                {
                    b.Navigation("Foods");
                });

            modelBuilder.Entity("AppDiyet.Core.Concretes.Meals", b =>
                {
                    b.Navigation("FoodMeals");
                });

            modelBuilder.Entity("AppDiyet.Core.Concretes.Users", b =>
                {
                    b.Navigation("Meals");
                });
#pragma warning restore 612, 618
        }
    }
}
